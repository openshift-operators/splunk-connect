---
- name: Create SCC for Splunk - Fluentd hostPath mounting
  k8s:
    state: present
    verify_ssl: "{{ k8s_validate_cert }}"
    apply: yes
    definition:
      apiVersion: v1
      kind: "SecurityContextConstraints"
      metadata:
        name: "{{ meta.namespace }}-fluentd-privileged"
        annotations:
          kubernetes.io/description: "SCC for Splunk - Fluentd log aggregation daemonset"
      allowHostDirVolumePlugin: true
      allowHostIPC: true
      allowHostNetwork: true
      allowHostPID: true
      allowHostPorts: true
      allowPrivilegeEscalation: true
      allowPrivilegedContainer: true
      allowedCapabilities:
        - '*'
      defaultAddCapabilities: null
      fsGroup:
        type: RunAsAny
      groups: []
      priority: null
      readOnlyRootFilesystem: false
      requiredDropCapabilities: null
      runAsUser:
        type: RunAsAny
      seLinuxContext:
        type: RunAsAny
      seccompProfiles:
        - '*'
      supplementalGroups:
        type: RunAsAny
      users:
        - "system:serviceaccount:{{ meta.namespace }}:default"
      volumes:
        - '*'

- name: Create or update configmap for logs sender agent
  k8s:
    state: present
    verify_ssl: "{{ k8s_validate_cert }}"
    apply: yes
    definition:  "{{ lookup('template', 'splunk-logs-configmap.yaml') | from_yaml }}"
  register: fluentd_conf

- block:
    - k8s_facts:
        verify_ssl: "{{ k8s_validate_cert }}"
        kind: Pod
        namespace: "{{ meta.namespace }}"
        label_selectors:
          - "app=splunk-logs-forwarder"
      register: fluentd_pods

    - name: Remove ALL Fluentd pods
      k8s:
        verify_ssl: "{{ k8s_validate_cert }}"
        kind: Pod
        state: absent
        namespace: "{{ meta.namespace }}"
        name: "{{ item.metadata.name }}"
      loop: "{{ fluentd_pods.resources }}"
  when:  fluentd_conf.changed == true


- name: Create or update  logs sender daemonset
  k8s:
    verify_ssl: "{{ k8s_validate_cert }}"
    state: present
    definition:
      apiVersion: apps/v1
      kind: DaemonSet
      metadata:
        name: splunk-kubernetes-logging
        namespace: {{ meta.namespace }}
        labels:
          app: "splunk-logs-forwarder"
          engine: fluentd
          version: 1.2.0
      spec:
        selector:
          matchLabels:
            app: "splunk-logs-forwarder"
            version: 1.2.0
        template:
          metadata:
            labels:
              app: "splunk-logs-forwarder"
              version: 1.2.0
            annotations: {}
          spec:
            tolerations:
              - effect: NoSchedule
                key: node-role.kubernetes.io/master
            nodeSelector:
              beta.kubernetes.io/os: linux
            containers:
              - name: splunk-fluentd-k8s-logs
                image: splunk/fluentd-hec:1.1.1
                imagePullPolicy: Always
                args:
                  - "-c"
                  - "/fluentd/etc/fluent.conf"
                env:
                  - name: NODE_NAME
                    valueFrom:
                      fieldRef:
                        fieldPath: spec.nodeName
                  - name: MY_NAMESPACE
                    valueFrom:
                      fieldRef:
                        fieldPath: metadata.namespace
                  - name: MY_POD_NAME
                    valueFrom:
                      fieldRef:
                        fieldPath: metadata.name
                  - name: SPLUNK_HEC_HOST
                    value: "{{ splunk_hec_protocol }}://{{ splunk_hec_host }}"

                  - name: SPLUNK_HEC_TOKEN
                    valueFrom:
                      secretKeyRef:
                        name: "{{ secret_name }}"
                        key: splunk_hec_token

                securityContext:
                  privileged: true
                  runAsUser: 0
                resources:
                  requests:
                    cpu: 100m
                    memory: 200Mi
                volumeMounts:
                  - name: varlog
                    mountPath: "/var/log"

                  - name: varlibdockercontainers
                    mountPath: "/var/lib/docker/containers"
                    readOnly: true
                  - name: journallogpath
                    mountPath: "/run/log/journal"
                    readOnly: true
                  - name: "logs-forwarder-conf"
                    mountPath: "/fluentd/etc"
                  - name: "{{ secret_name }}"
                    mountPath: "/fluentd/etc/splunk"
                    readOnly: true
            terminationGracePeriodSeconds: 30
            volumes:
              - name: varlog
                hostPath:
                  path: "/var/log"

              - name: varlibdockercontainers
                hostPath:
                  path: "/var/lib/docker/containers"
              - name: journallogpath
                hostPath:
                  path: "/run/log/journal"
              - name: "logs-forwarder-conf"
                configMap:
                  name: "logs-forwarder-conf"
              - name: "{{ secret_name }}"
                secret:
                  secretName: "{{ secret_name }}"




